//
//  DisclaimerView.swift - –û–ö–û–ù–ß–ê–¢–ï–õ–¨–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï
//  AI_Psycholog
//
//  –ö–†–ò–¢–ò–ß–ù–û: –ü—Ä–æ—Å—Ç–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –±–µ–∑ —Å–ª–æ–∂–Ω–æ–π –ª–æ–≥–∏–∫–∏
//

import SwiftUI

struct DisclaimerView: View {
    @Binding var isPresented: Bool
    @AppStorage("hasAcceptedDisclaimer") private var hasAcceptedDisclaimer = false
    let onAccepted: () -> Void
    
    var body: some View {
        NavigationView {
            ScrollView {
                VStack(spacing: 24) {
                    // –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∏–∫–æ–Ω–∫–æ–π
                    VStack(spacing: 16) {
                        Image(systemName: "exclamationmark.triangle.fill")
                            .font(.system(size: 60))
                            .foregroundColor(.orange)
                        
                        Text("–í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
                            .font(.largeTitle)
                            .fontWeight(.bold)
                            .multilineTextAlignment(.center)
                    }
                    .padding(.top, 20)
                    
                    // –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç –¥–∏—Å–∫–ª–µ–π–º–µ—Ä–∞
                    VStack(spacing: 20) {
                        DisclaimerCard(
                            icon: "brain",
                            title: "AI-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç",
                            description: "–î–∞–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞ –¥–ª—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∏ –æ–±—â–∏—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ —É–ª—É—á—à–µ–Ω–∏—é –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏—è."
                        )
                        
                        DisclaimerCard(
                            icon: "stethoscope",
                            title: "–ù–µ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –¥–∏–∞–≥–Ω–æ–∑",
                            description: "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ù–ï –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –¥–∏–∞–≥–Ω–æ–∑—ã, –ª–µ—á–µ–Ω–∏–µ –∏–ª–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–∏—é. –≠—Ç–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∏ —Å–∞–º–æ–ø–æ–º–æ—â–∏.",
                            isWarning: true
                        )
                        
                        DisclaimerCard(
                            icon: "person.badge.plus",
                            title: "–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É",
                            description: "–ü—Ä–∏ —Å–µ—Ä—å–µ–∑–Ω—ã—Ö –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º–∞—Ö, —Å—É–∏—Ü–∏–¥–∞–ª—å–Ω—ã—Ö –º—ã—Å–ª—è—Ö –∏–ª–∏ –∫—Ä–∏–∑–∏—Å–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è—Ö –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–º—É —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É."
                        )
                        
                        DisclaimerCard(
                            icon: "lock.shield",
                            title: "–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å",
                            description: "–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∑–∞—â–∏—â–µ–Ω—ã, –Ω–æ –ø–æ–º–Ω–∏—Ç–µ: —ç—Ç–æ AI-—Å–∏—Å—Ç–µ–º–∞, –∞ –Ω–µ —á–µ–ª–æ–≤–µ–∫-–ø—Å–∏—Ö–æ–ª–æ–≥ —Å–æ —Å—Ç—Ä–æ–≥–æ–π –≤—Ä–∞—á–µ–±–Ω–æ–π —Ç–∞–π–Ω–æ–π."
                        )
                        
                        DisclaimerCard(
                            icon: "clock",
                            title: "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞",
                            description: "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∫–∞–∫ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫, –∞ –Ω–µ –∑–∞–º–µ–Ω—É —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ–π –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –ø–æ–º–æ—â–∏."
                        )
                    }
                    
                    // –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã
                    VStack(spacing: 12) {
                        Text("üÜò –≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å")
                            .font(.headline)
                            .foregroundColor(.red)
                        
                        Text("–†–æ—Å—Å–∏—è: 8-800-2000-122 (–î–µ—Ç—Å–∫–∏–π —Ç–µ–ª–µ—Ñ–æ–Ω –¥–æ–≤–µ—Ä–∏—è)")
                            .font(.caption)
                        Text("–≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–º–æ—â—å: 051")
                            .font(.caption)
                        Text("–ü—Ä–∏ —É–≥—Ä–æ–∑–µ –∂–∏–∑–Ω–∏: 112")
                            .font(.caption)
                            .fontWeight(.semibold)
                    }
                    .padding()
                    .background(Color.red.opacity(0.1))
                    .cornerRadius(12)
                    
                    // –°–æ–≥–ª–∞—à–µ–Ω–∏–µ
                    VStack(spacing: 16) {
                        Text("–ü—Ä–æ–¥–æ–ª–∂–∞—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –≤—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ, —á—Ç–æ:")
                            .font(.subheadline)
                            .fontWeight(.medium)
                        
                        VStack(alignment: .leading, spacing: 8) {
                            ChecklistItem(text: "–ü–æ–Ω–∏–º–∞–µ—Ç–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è AI-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞")
                            ChecklistItem(text: "–ë—É–¥–µ—Ç–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏")
                            ChecklistItem(text: "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ")
                            ChecklistItem(text: "–í–∞–º –∏—Å–ø–æ–ª–Ω–∏–ª–æ—Å—å 13 –ª–µ—Ç")
                        }
                    }
                    .padding()
                    .background(Color(UIColor.secondarySystemBackground))
                    .cornerRadius(12)
                    
                    // –ö–Ω–æ–ø–∫–∏
                    VStack(spacing: 12) {
                        Button(action: acceptDisclaimer) {
                            Text("–Ø –ø–æ–Ω–∏–º–∞—é –∏ —Å–æ–≥–ª–∞—Å–µ–Ω")
                                .fontWeight(.semibold)
                                .foregroundColor(.white)
                                .frame(maxWidth: .infinity)
                                .padding()
                                .background(Color(hex: "889E8C"))
                                .cornerRadius(12)
                        }
                        
                        Button(action: cancelDisclaimer) {
                            Text("–û—Ç–º–µ–Ω–∞")
                                .foregroundColor(.secondary)
                        }
                    }
                    .padding(.bottom, 20)
                }
                .padding(.horizontal, 20)
            }
            .navigationBarHidden(true)
        }
    }
    
    private func acceptDisclaimer() {
        print("üì± DisclaimerView: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏–Ω—è–ª –¥–∏—Å–∫–ª–µ–π–º–µ—Ä")
        hasAcceptedDisclaimer = true
        onAccepted()
    }
    
    private func cancelDisclaimer() {
        isPresented = false
    }
}

struct DisclaimerCard: View {
    let icon: String
    let title: String
    let description: String
    var isWarning: Bool = false
    
    var body: some View {
        HStack(alignment: .top, spacing: 16) {
            Image(systemName: icon)
                .font(.title2)
                .foregroundColor(isWarning ? .red : Color(hex: "889E8C"))
                .frame(width: 30)
            
            VStack(alignment: .leading, spacing: 8) {
                Text(title)
                    .font(.headline)
                    .fontWeight(.semibold)
                
                Text(description)
                    .font(.body)
                    .foregroundColor(.secondary)
                    .fixedSize(horizontal: false, vertical: true)
            }
            
            Spacer()
        }
        .padding()
        .background(
            RoundedRectangle(cornerRadius: 12)
                .fill(isWarning ? Color.red.opacity(0.05) : Color(UIColor.secondarySystemBackground))
                .overlay(
                    RoundedRectangle(cornerRadius: 12)
                        .stroke(isWarning ? Color.red.opacity(0.3) : Color.clear, lineWidth: 1)
                )
        )
    }
}

struct ChecklistItem: View {
    let text: String
    
    var body: some View {
        HStack(spacing: 12) {
            Image(systemName: "checkmark.circle.fill")
                .foregroundColor(Color(hex: "889E8C"))
                .font(.body)
            
            Text(text)
                .font(.body)
            
            Spacer()
        }
    }
}
