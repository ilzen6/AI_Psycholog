//
//  SplashView.swift - –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô
//  AI_Psycholog
//
//  –ö–†–ò–¢–ò–ß–ù–û: –ü—Ä–æ—Å—Ç–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –±–µ–∑ callback
//

import SwiftUI

struct SplashView: View {
    @State private var brainScale: CGFloat = 1.0
    @State private var showText = false
    @State private var textOpacity: Double = 0.0
    @State private var textOffset: CGFloat = 50
    @Binding var showSplash: Bool
    
    var body: some View {
        ZStack {
            // –§–æ–Ω —Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–º
            LinearGradient(
                gradient: Gradient(colors: [
                    Color(hex: "A5BDA9"),
                    Color(hex: "889E8C")
                ]),
                startPoint: .topLeading,
                endPoint: .bottomTrailing
            )
            .ignoresSafeArea()
            
            VStack(spacing: 0) {
                Spacer()
                
                // –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∏–∫–æ–Ω–∫–∞ –º–æ–∑–≥–∞
                Image(systemName: "brain")
                    .font(.system(size: 120, weight: .light))
                    .foregroundColor(.white)
                    .scaleEffect(brainScale)
                
                Spacer()
                
                // –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
                if showText {
                    VStack(spacing: 16) {
                        Text("–ø–æ–≥–æ–≤–æ—Ä–∏—Ç–µ —Å —Å–æ–±–æ–π,")
                            .font(.title2)
                            .fontWeight(.light)
                            .foregroundColor(.white)
                            .opacity(textOpacity)
                            .offset(y: textOffset)
                        
                        Text("—Å –ø–æ–º–æ—â—å—é –Ω–∞—Å")
                            .font(.title)
                            .fontWeight(.medium)
                            .foregroundColor(.white)
                            .opacity(textOpacity)
                            .offset(y: textOffset)
                    }
                    .multilineTextAlignment(.center)
                }
                
                Spacer()
            }
            .padding(.horizontal, 40)
        }
        .onAppear {
            startAnimations()
        }
    }
    
    private func startAnimations() {
        print("üì± SplashView: –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏–∏")
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –º–æ–∑–≥–∞ —Å—Ä–∞–∑—É
        withAnimation(
            Animation
                .easeInOut(duration: 1.5)
                .repeatForever(autoreverses: true)
        ) {
            brainScale = 1.2
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
        DispatchQueue.main.asyncAfter(deadline: .now() + 2.0) {
            withAnimation(.easeOut(duration: 0.8)) {
                showText = true
                textOpacity = 1.0
                textOffset = 0
            }
        }
        
        print("üì± SplashView: –ê–Ω–∏–º–∞—Ü–∏–∏ –∑–∞–ø—É—â–µ–Ω—ã, ContentView –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—Ç –≤—Ä–µ–º—è")
    }
}
